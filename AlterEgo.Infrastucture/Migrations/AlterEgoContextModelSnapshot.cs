// <auto-generated />
using System;
using AlterEgo.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlterEgo.Infrastructure.Migrations
{
    [DbContext(typeof(AlterEgoContext))]
    partial class AlterEgoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("AlterEgo.Core.Domains.AnimationTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("ImagePadding")
                        .HasColumnType("real");

                    b.Property<string>("OwnerLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResultAnimationFilename")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("RetainAudio")
                        .HasColumnType("bit");

                    b.Property<string>("SourceImageFilename")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SourceVideoFilename")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerLogin");

                    b.HasIndex("ResultAnimationFilename");

                    b.HasIndex("SourceImageFilename");

                    b.HasIndex("SourceVideoFilename");

                    b.ToTable("AnimationTasks");
                });

            modelBuilder.Entity("AlterEgo.Core.Domains.DrivingVideo", b =>
                {
                    b.Property<string>("Filename")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OriginalFilename")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActualDeletion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PlannedDeletion")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("PlannedLifetime")
                        .HasColumnType("time");

                    b.Property<byte[]>("Thumbnail")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Filename");

                    b.HasIndex("OwnerLogin");

                    b.ToTable("DrivingVideos");
                });

            modelBuilder.Entity("AlterEgo.Core.Domains.Image", b =>
                {
                    b.Property<string>("Filename")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OriginalFilename")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActualDeletion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PlannedDeletion")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("PlannedLifetime")
                        .HasColumnType("time");

                    b.Property<byte[]>("Thumbnail")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Filename");

                    b.HasIndex("OwnerLogin");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("AlterEgo.Core.Domains.ResultVideo", b =>
                {
                    b.Property<string>("Filename")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OriginalFilename")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActualDeletion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PlannedDeletion")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("PlannedLifetime")
                        .HasColumnType("time");

                    b.Property<byte[]>("Thumbnail")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Filename");

                    b.HasIndex("OwnerLogin");

                    b.ToTable("ResultVideos");
                });

            modelBuilder.Entity("AlterEgo.Core.Domains.User", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AlterEgo.Core.Domains.AnimationTask", b =>
                {
                    b.HasOne("AlterEgo.Core.Domains.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerLogin");

                    b.HasOne("AlterEgo.Core.Domains.ResultVideo", "ResultAnimation")
                        .WithMany()
                        .HasForeignKey("ResultAnimationFilename");

                    b.HasOne("AlterEgo.Core.Domains.Image", "SourceImage")
                        .WithMany()
                        .HasForeignKey("SourceImageFilename");

                    b.HasOne("AlterEgo.Core.Domains.DrivingVideo", "SourceVideo")
                        .WithMany()
                        .HasForeignKey("SourceVideoFilename");
                });

            modelBuilder.Entity("AlterEgo.Core.Domains.DrivingVideo", b =>
                {
                    b.HasOne("AlterEgo.Core.Domains.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerLogin");
                });

            modelBuilder.Entity("AlterEgo.Core.Domains.Image", b =>
                {
                    b.HasOne("AlterEgo.Core.Domains.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerLogin");
                });

            modelBuilder.Entity("AlterEgo.Core.Domains.ResultVideo", b =>
                {
                    b.HasOne("AlterEgo.Core.Domains.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerLogin");
                });
#pragma warning restore 612, 618
        }
    }
}
